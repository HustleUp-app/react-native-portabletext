---
  name: CI

  # Workflow name based on selected inputs. Fallback to default Github naming when expression evaluates to empty string
  run-name: >-
    ${{
      inputs.release && 'CI âž¤ Publish to NPM' ||
      ''
    }}

  on:
    pull_request:
    push:
      branches: [main]
    workflow_dispatch:
      inputs:
        release:
          description: 'Publish new release'
          required: true
          default: false
          type: boolean

  concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-node@v3
          with:
            node-version: lts/*
            cache: npm
        - run: npm ci
        - run: npm run prepublishOnly

    test:
      needs: build
      runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os: [macos-latest, ubuntu-latest, windows-latest]
          node: [lts/*]
          include:
            - os: ubuntu-latest
              node: lts/-1
            - os: ubuntu-latest
              node: current
      steps:
        - name: Set git to use LF
          if: matrix.os == 'windows-latest'
          run: |
            git config --global core.autocrlf false
            git config --global core.eol lf
        - uses: actions/checkout@v3
        - uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node }}
            cache: npm
        - run: npm i
        - run: npm test

    release:
      needs: [build, test]
      # only run if opt-in during workflow_dispatch
      if: github.event.inputs.release == 'true'
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            # Need to fetch entire commit history to
            # analyze every commit since last release
            fetch-depth: 0
        - uses: actions/setup-node@v3
          with:
            node-version: lts/*
            cache: npm
        - run: npm ci
          # Branches that will release new versions are defined in .releaserc.json
        - run: npx semantic-release --dry-run --debug
          # Don't allow interrupting the release step if the job is cancelled, as it can lead to an inconsistent state
          # e.g. git tags were pushed but it exited before `npm publish`
          if: always()
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
